name: RabbitMQ - Build and Publish Docker Image for ARM64

on:
  push:
    branches:
      - main
    paths:
      - 'RabbitMQ/**'
      - '/.github/workflows/docker-build-rabbitmq.yaml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-rabbitmq
  APP_VERSION: "v1.0.14" # não esquecer de atualizar a versão no arquivo RabbitMQ/config.yaml também (e dar commit) para que o Home Assistant atualize o addon automaticamente (se estiver instalado)

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [ linux/arm64, linux/amd64 ]

    permissions:
      contents: read
      packages: write

    steps:
    - name: Check Out Repo
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # - name: Extract metadata for Docker Buildx
    #   id: meta
    #   uses: docker/metadata-action@v5
    #   with:
    #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.platform }}
    #     tags: type=raw,value=${{ env.APP_VERSION }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v6
      with:
        context: ./RabbitMQ
        file: ./RabbitMQ/Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.platform }}:${{ env.APP_VERSION }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: ${{ matrix.platform }}
        build-args: |
          BUILDPLATFORM=${{ matrix.platform }}
        outputs: type=image,name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.platform }},push=true
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Push to Index Repository
      run: |
        docker manifest create --amend \
          ghcr.io/${{ env.IMAGE_NAME }}:${{ env.APP_VERSION }} \
          ghcr.io/${{ env.IMAGE_NAME }}-${{ matrix.platform }}:${{ env.APP_VERSION }}
        docker manifest annotate \
          ghcr.io/${{ env.IMAGE_NAME }}:${{ env.APP_VERSION }} \
          ghcr.io/${{ env.IMAGE_NAME }}-${{ matrix.platform }}:${{ env.APP_VERSION }} \
          --os linux --arch ${{ matrix.platform == 'linux/amd64' && 'amd64' || 'arm64' }}
        docker manifest push --purge ghcr.io/${{ env.IMAGE_NAME }}:${{ env.APP_VERSION }} 
